algoritmo "AutoFacil_Sales_System"

var
    modeloCarro: vetor[1..100] de caractere
    anoCarro: vetor[1..100] de inteiro
    precoCarro: vetor[1..100] de real
    estoqueCarro: vetor[1..100] de inteiro
    totalCarros: inteiro

    nomeCliente: caractere
    cpfCliente: caractere
    emailCliente: caractere

    indiceCompra: vetor[1..100] de inteiro
    qtdCompra: vetor[1..100] de inteiro
    totalCompras: inteiro

    totalSemDesconto, totalDesconto, valorFinal, somaPrecos: real

    anoAtual: inteiro
    opcao: inteiro
    i: inteiro

procedimento registerCar()
var
    modelo: caractere
    ano: inteiro
    preco: real
    qtdEstoque: inteiro
inicio
    escreval("\n== Cadastro de Veículo ==")
    escreva("Informe o modelo do carro: ")
    leia(modelo)

    repita
        escreva("Informe o ano de fabricação (1990 até ", anoAtual, "): ")
        leia(ano)
        se (ano < 1990) ou (ano > anoAtual) entao
            escreval("Ano inválido. Por favor, informe um ano entre 1990 e ", anoAtual, ".")
        fimse
    ate (ano >= 1990) e (ano <= anoAtual)

    repita
        escreva("Informe o preço do carro (mínimo R$10.000): R$ ")
        leia(preco)
        se preco < 10000 entao
            escreval("Preço inválido. O valor deve ser igual ou superior a R$10.000.")
        fimse
    ate preco >= 10000

    repita
        escreva("Informe a quantidade disponível em estoque: ")
        leia(qtdEstoque)
        se qtdEstoque < 0 entao
            escreval("Quantidade inválida. O estoque não pode ser negativo.")
        fimse
    ate qtdEstoque >= 0

    totalCarros <- totalCarros + 1
    modeloCarro[totalCarros] <- modelo
    anoCarro[totalCarros] <- ano
    precoCarro[totalCarros] <- preco
    estoqueCarro[totalCarros] <- qtdEstoque

    escreval("Veículo cadastrado com sucesso.\n")
fimprocedimento

procedimento registerClient()
var
    tamCPF: inteiro
inicio
    escreval("\n== Cadastro de Cliente ==")
    escreva("Informe o nome completo: ")
    leia(nomeCliente)

    repita
        escreva("Informe o CPF (somente números, 11 dígitos): ")
        leia(cpfCliente)
        tamCPF <- compr(cpfCliente)
        se tamCPF <> 11 entao
            escreval("CPF inválido. Deve conter exatamente 11 dígitos.")
        fimse
    ate tamCPF = 11

    repita
        escreva("Informe o e-mail: ")
        leia(emailCliente)
        se pos("@", emailCliente) = 0 entao
            escreval("E-mail inválido. O e-mail deve conter '@'.")
        fimse
    ate pos("@", emailCliente) > 0

    escreval("Cliente cadastrado com sucesso.\n")
fimprocedimento

procedimento registerPurchase()
var
    continuar: caractere
    escolhaCarro, quantidade: inteiro
inicio
    totalCompras <- 0
    continuar <- "s"

    enquanto continuar = "s" faca
        escreval("\n== Registro de Compra ==")
        escreva("Digite o número do carro (1 a ", totalCarros, "): ")
        leia(escolhaCarro)

        se (escolhaCarro >= 1) e (escolhaCarro <= totalCarros) entao
            escreva("Quantidade desejada: ")
            leia(quantidade)

            se quantidade <= estoqueCarro[escolhaCarro] entao
                totalCompras <- totalCompras + 1
                indiceCompra[totalCompras] <- escolhaCarro
                qtdCompra[totalCompras] <- quantidade
                estoqueCarro[escolhaCarro] <- estoqueCarro[escolhaCarro] - quantidade
                escreval("Compra registrada com sucesso.")
            senao
                escreval("Estoque insuficiente.")
            fimse
        senao
            escreval("Carro inválido.")
        fimse

        escreva("Deseja comprar outro carro? (s/n): ")
        leia(continuar)
    fimenquanto
fimprocedimento

procedimento sellCar()
var
    escolhaCarro, quantidade: inteiro
inicio
    escreval("\n== Venda de Carro ==")
    escreva("Digite o número do carro (1 a ", totalCarros, "): ")
    leia(escolhaCarro)

    se (escolhaCarro >= 1) e (escolhaCarro <= totalCarros) entao
        escreva("Quantidade a vender: ")
        leia(quantidade)

        se quantidade <= estoqueCarro[escolhaCarro] entao
            estoqueCarro[escolhaCarro] <- estoqueCarro[escolhaCarro] - quantidade
            escreval("Venda realizada com sucesso.")
        senao
            escreval("Estoque insuficiente para realizar a venda.")
        fimse
    senao
        escreval("Carro inválido.")
    fimse
fimprocedimento

procedimento generateReport()
var
    i, idx: inteiro
    precoUnitario, subtotal, desconto: real
inicio
    totalSemDesconto <- 0
    totalDesconto <- 0
    valorFinal <- 0
    somaPrecos <- 0

    escreval("\n== Relatório Final ==")
    escreval("Cliente: ", nomeCliente)
    escreval("CPF: ", cpfCliente)
    escreval("Email: ", emailCliente)
    escreval("\nCarros comprados:")

    para i de 1 ate totalCompras faca
        idx <- indiceCompra[i]
        precoUnitario <- precoCarro[idx]
        subtotal <- precoUnitario * qtdCompra[i]
        desconto <- 0

        se qtdCompra[i] > 2 entao
            desconto <- desconto + (subtotal * 0.05)
        fimse

        se anoCarro[idx] < anoAtual entao
            desconto <- desconto + (subtotal * 0.10)
        fimse

        totalSemDesconto <- totalSemDesconto + subtotal
        totalDesconto <- totalDesconto + desconto
        somaPrecos <- somaPrecos + subtotal

        escreval("- ", modeloCarro[idx], " | Ano: ", anoCarro[idx], " | Preço: R$ ", precoUnitario, " | Quantidade: ", qtdCompra[i])
    fimpara

    valorFinal <- totalSemDesconto - totalDesconto

    escreval("\nResumo Financeiro:")
    escreval("Total sem desconto: R$ ", totalSemDesconto)
    escreval("Descontos aplicados: R$ ", totalDesconto)
    escreval("Valor final a pagar: R$ ", valorFinal)

    se totalCompras > 0 entao
        escreval("Média de preços dos carros comprados: R$ ", somaPrecos / totalCompras)
    senao
        escreval("Nenhum carro foi comprado, portanto não há média de preços.")
    fimse
fimprocedimento

inicio
    totalCarros <- 0
    anoAtual <- 2025

    repita
        escreval("\n  AFSS - AutoFácil Sales System")
        escreval("1 - Cadastrar Carro")
        escreval("2 - Cadastrar Cliente")
        escreval("3 - Sair do Sistema")
        escreval("4 - Registrar Compras")
        escreval("5 - Gerar Relatório Final")
        escreval("6 - Vender Carro (sem cliente)")

        escreva("Escolha uma opção: ")
        leia(opcao)

        escolha opcao
            caso 1
                registerCar()
            caso 2
                registerClient()
            caso 3
                escreval("\nEncerrando o sistema. Obrigado por utilizar o AFSS.")
            caso 4
                registerPurchase()
            caso 5
                generateReport()
            caso 6
                sellCar()
            outrocaso
                escreval("Opção inválida. Por favor, tente novamente.\n")
        fimescolha
    ate opcao = 3
fimalgoritmo
